# ~/.tmux.conf
# Base: https://gist.github.com/721200
#
# Adjusted for my comfort.
#
# -----------------------------------------------------------------------------
# Global settings

unbind-key C-b
set-option -g prefix C-t

# send the prefix to client inside window
bind-key C-t send-prefix
bind-key t send-prefix

# vi-style controls for opy mode
setw -g mode-keys vi

# copying and pasting
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'Y' send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

bind-key C-t last-window
bind-key C-n next-layout
bind-key C-p previous-layout

bind-key b list-buffers
bind-key p choose-buffer
bind-key x delete-buffer
bind P if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    popup -E 'tmux attach -t popup || tmux new -s popup'
}

# scrollback buffer n lines
set -g history-limit 99999999

# listen for activity on all windows
set -g bell-action any

# start window indexing at zero (default)
set -g base-index 1

# drop escape-time all the way down
set -g escape-time 0

# tell tmux to use 256 colour terminal
#set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',*256col*:Tc'

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename on

# enable wm window titles
set -g set-titles off

# Key bindings

# reload settings
bind-key R source-file ~/.config/tmux/tmux.conf

# detach client
bind-key d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-session
bind-key '"' choose-window

# swap panes
# bind-key -r H swap-pane -L
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U
# bind-key -r L swap-pane -R

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# Screen-like key bindings

# new window
bind-key c new-window
bind-key C new-session

# next
bind-key -r Space next-window

# prev
bind-key BSpace previous-window

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"
bind-key S command-prompt "rename-session %%"

# quit
# bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key C-l refresh-client

# Split windows like vim

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 3
bind-key -r - resize-pane -D 3
bind-key = select-layout -E

# statusbar
bind-key s set status

set -g status-keys        vi
set -g pane-border-status off
set -g display-time       2000
set -g visual-activity    off
set -g monitor-activity   on
set -g visual-bell        off

set  -g message-style                fg=white,bg=default,bright
set  -g pane-active-border-style     fg=#5fd7ff,bold
set  -g pane-border-style            fg=#363636,bg=terminal
set  -g status-style                 fg=white,bg=default,default

set -g base-index 1
set -g pane-base-index 1

setw -g status-position         top

setw -g window-status-current-style  fg=#5fd7ff,bg=default,bright,bold,underscore
setw -g window-status-last-style     fg=#5fd7ff,bg=default,dim
setw -g window-status-style          fg=#6a6b3f,bg=default,dim
setw -g window-status-activity-style fg=#eeeeee,bg=default,dim

# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 0

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour235,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour117,fg=colour235 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour117

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223,bold # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour180,fg=colour238 # bg=red, fg=bg

set-option -g status-left "\
#[fg=colour255, bg=colour239]#{?client_prefix,#[bg=colour180],} ðŸ’£ #S \
#[fg=colour239, bg=colour235]#{?client_prefix,#[fg=colour180],}î‚°"

set-option -g status-right "\
#[fg=colour235, bg=colour17]"

set-window-option -g window-status-current-format "\
#{?window_zoomed_flag, #[fg=colour208,}\
#[fg=colour235, bg=colour223]î‚°\
#[fg=colour239, bg=colour223] #I* î‚±\
#[fg=colour239, bg=colour223, bold] #W \
#[fg=colour223, bg=colour237]î‚°"

set-window-option -g window-status-format "\
#[fg=colour235,bg=colour235,noitalics]\
#[fg=colour223,bg=colour235] #I î‚±\
#[fg=colour223,bg=colour235] #W \
#[fg=colour235,bg=colour235]"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -r h select-pane -L
bind-key -r j select-pane -U
bind-key -r k select-pane -D
bind-key -r l select-pane -R
# -----------------------------------------------------------------------------
# vim: fen fdl=0 fdm=marker
