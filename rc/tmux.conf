# ~/.tmux.conf
# Base: https://gist.github.com/721200
#
# Adjusted for my comfort.
#
# -----------------------------------------------------------------------------
# Global settings

unbind-key C-b
set-option -g prefix C-t

# send the prefix to client inside window
bind-key C-t send-prefix
bind-key t send-prefix

# toggle last window like screen
bind-key C-t last-window

# scrollback buffer n lines
set -g history-limit 99999

# listen for activity on all windows
set -g bell-action any

# start window indexing at zero (default)
set -g base-index 1

# drop escape-time all the way down
set -g escape-time 0

# tell tmux to use 256 colour terminal
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',*256col*:Tc'

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off

# enable wm window titles
set -g set-titles off

# Key bindings

# reload settings
bind-key R source-file ~/.tmux.conf

# detach client
bind-key d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-session
bind-key '"' choose-window

# swap panes
# bind-key -r H swap-pane -L
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U
# bind-key -r L swap-pane -R

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

bind-key -r h select-pane -L
bind-key -r j select-pane -U
bind-key -r k select-pane -D
bind-key -r l select-pane -R

# copying and pasting
bind-key v copy-mode
bind-key p paste-buffer -s \015

# vi-style controls for copy mode
setw -g mode-keys vi

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer


# Screen-like key bindings

# new window
bind-key c new-window

# next
bind-key -r Space next-window

# prev
bind-key BSpace previous-window

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# quit
# bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key C-l refresh-client

# Split windows like vim

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 3
bind-key -r = resize-pane -D 3

# statusbar
bind-key s set status

set -g status-keys        vi
set -g pane-border-status off
set -g display-time       2000
set -g visual-activity    off
set -g monitor-activity   on
set -g visual-bell        off

set  -g message-style                fg=white,bg=default,bright
set  -g pane-active-border-style     fg=#5fd7ff,bold
set  -g pane-border-style            fg=#363636,bg=terminal
set  -g status-style                 fg=white,bg=default,default

setw -g status-position         top
setw -g window-status-separator " | "

setw -g window-status-current-style  fg=#5fd7ff,bg=default,bright,bold,underscore
setw -g window-status-last-style     fg=#5fd7ff,bg=default,dim
setw -g window-status-style          fg=#6a6b3f,bg=default,dim
setw -g window-status-activity-style fg=#eeeeee,bg=default,dim

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# -----------------------------------------------------------------------------
# vim: fen fdl=0 fdm=marker
