# ~/.tmux.conf
# Base: https://gist.github.com/721200
#
# Adjusted for my comfort.
#
# -----------------------------------------------------------------------------
# Global settings

unbind-key C-b
set-option -g prefix C-f

# send the prefix to client inside window
bind-key C-f send-prefix
bind-key f send-prefix

# vi-style controls for opy mode
setw -g mode-keys vi
set -g focus-events on

# copying and pasting
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'Y' send -X copy-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key p pasteb

bind-key x kill-pane
bind-key C-i next-layout
bind-key C-o previous-layout
bind-key C-p last-window
bind-key C-n next-window

bind P if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    popup -E 'tmux attach -t popup || tmux new -s popup'
}

bind c-f display-popup -E 'tmux list-windows -F "#{window_index}|#{window_name} #{?window_active,[active],}" | fzf --height=100% --reverse --header="Windows (current session)" --color=pointer:#d787d7,header:#d787d7,hl+:#ffafaf --exit-0 --preview "echo {} | cut -d\"|\" -f1 | xargs -I {} tmux capture-pane -ep -t {} -S -30" --preview-window=right:60% | cut -d"|" -f1 | xargs tmux select-window -t'
bind c-w display-popup -E 'tmux list-sessions -F "#{session_name}: #{session_windows} windows#{?session_attached, (attached),}" | fzf --height=100% --reverse --header="Sessions" --color=pointer:#d787d7,header:#d787d7,hl+:#ffafaf --exit-0 --preview "echo \"Windows in session {1}:\"; tmux list-windows -t {1} -F \"  #I: #W\" 2>/dev/null; echo \"\"; echo \"Current pane content:\"; tmux capture-pane -ep -t {1} -S -20 2>/dev/null" --preview-window=right:60% | sed "s/:.*//g" | xargs tmux switch-client -t'
bind m display-popup -E '~/.files/bin/tmux-move-pane-fzf'
bind M display-popup -E '~/.files/bin/tmux-move-all-panes-fzf'

# scrollback buffer n lines
set -g history-limit 99999999

# listen for activity on all windows
set -g bell-action any

# drop escape-time all the way down
set -g escape-time 0

# Undercurl support
# set -g default-terminal "xterm-kitty" # NOTE: TERM is overriden otherwise
# set -ag terminal-overrides ",xterm-kitty:Tc"
# set -as terminal-features ",xterm-kitty:RGB"
# set -g default-terminal "tmux-256color"
# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"

set-option -gas terminal-overrides "*:Tc" # true color support
set-option -gas terminal-overrides "*:RGB" # true color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off

# enable wm window titles
set -g set-titles off # TODO: i might like this

# Key bindings

# reload settings
bind-key r source-file ~/.config/tmux/tmux.conf

# detach client
bind-key d detach

# choose a client to detach
bind-key D choose-client

# swap panes
# bind-key -r H swap-pane -L
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U
# bind-key -r L swap-pane -R

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# Screen-like key bindings

# new window
bind-key c new-window
bind-key C new-session

# title (default key in tmux is ',')
bind-key f command-prompt "rename-window %%"
bind-key w command-prompt "rename-session %%"

# quit
 bind-key c-q confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key C-l refresh-client

# Split windows like vim
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 3
bind-key -r - resize-pane -D 3
bind-key = select-layout -E

# statusbar
set -g status-keys        vi
# set -g pane-border-status on
set -g display-time       2000
set -g visual-activity    off
set -g monitor-activity   on
set -g visual-bell        off
set -g status-interval    2

set -g base-index 0
set -g pane-base-index 0
set -g renumber-windows on

setw -g status-position top

setw -g window-status-activity-style fg=colour248,bg=colour237
setw -g window-status-current-style  bg=red,fg=colour236
setw -g window-status-last-style     bg=default,dim,fg=#5fd7ff
setw -g window-status-style          bg=colour117,fg=colour236 # bg=yellow, fg=bg1
setw -g window-style                 bg=#2a3038 # Dimmed inactive panes (matches Neovim NormalNC)
setw -g window-active-style 	     bg=#2E3440 # Active pane at normal Nord background
setw -g window-status-bell-style     bg=colour160,fg=colour236


# TODO: turn off pane cycling
# Length of tmux status line
set  -g display-panes-active-colour black
set  -g display-panes-colour black
set  -g message-command-style bg=black,fg=cyan
set  -g message-style bg=black,fg=cyan
set  -g pane-active-border-style bg=default,fg=#88C0D0 # Nord cyan/frost
set  -g pane-border-indicators both
set  -g pane-border-style bg=default,fg=#4C566A # Nord dark gray
set  -g pane-border-lines heavy
set  -g pane-border-status off
set  -g pane-border-format "#{?#{>:#{window_panes},1},#[bg=#2E3440]#{?pane_active,#[fg=#88C0D0],#[fg=#4C566A]} #{pane_index} #(~/.files/bin/tmux-pane-title #{pane_pid} '#{pane_current_path}') ,}"
set  -g status "on"
set  -g status-justify left
set  -g status-left-length 30
set  -g status-right-length 150
set  -g status-style bg=black,fg=white
setw -g clock-mode-colour cyan

set -g @prefix_highlight_fg black
set -g @prefix_highlight_bg brightcyan
set -g @prefix_highlight_copy_mode_attr "fg=black,bg=brightcyan"

set -g status-left "#[fg=black,bg=blue,bold] #S #[fg=blue,bg=black,nobold,noitalics,nounderscore]"
set -g status-right "#{prefix_highlight}#[fg=brightblack,bg=black,nobold,noitalics,nounderscore]\
#(~/.files/bin/tmux-ssh-status)#(~/.files/bin/tmux-battery-status)#[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]\
#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore]\
#[fg=black,bg=cyan,bold] #H "

set-window-option -g window-status-current-format "\
#{?window_zoomed_flag,#[bg=colour217],#[bg=cyan]}\
#[fg=black]\
#[fg=brightblack, bold] #I* \
#[fg=brightblack] #(~/.files/bin/tmux-window-title #{pane_pid} '#{pane_current_path}') \
#{?window_zoomed_flag,#[fg=colour217],#[fg=cyan]}\
#[bg=black]"

set-window-option -g window-status-format "\
#[fg=black,bg=black,noitalics]\
#[fg=cyan,bg=black] #I \
#[fg=cyan,bg=black] #(~/.files/bin/tmux-window-title #{pane_pid} '#{pane_current_path}') \
#[fg=black,bg=black]"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -r h select-pane -L
bind-key -r j select-pane -U
bind-key -r k select-pane -D
bind-key -r l select-pane -R

# bind-key e run-shell "~/.local/bin/nvim-edit-tmux-output"

# Hide pane borders when there's only one pane
set-hook -g after-split-window "set-option -w pane-border-status top"
set-hook -g pane-exited "if-shell '[ #{window_panes} -eq 1 ]' 'set-option -w pane-border-status off' 'set-option -w pane-border-status top'"

# Refresh status more frequently to update pane titles with running commands
set-hook -g pane-focus-in "refresh-client -S"
set-hook -g alert-activity "refresh-client -S"

# vim: fen fdl=0 fdm=marker
