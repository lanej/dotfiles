# Path to your oh-my-zsh configuration.
export TERM='xterm-256color'
# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git osx zsh-autosuggestions vi-mode)

DEFAULT_USER='jlane'

# Example aliases
alias zshconfig="e ~/.zshrc"

# Comment this out to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

HIST_FIND_NO_DUPS="true"
HIST_IGNORE_ALL_DUPS="true"
HISTSIZE=99999999
SAVEHIST=99999999

ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_COLOR_SCHEME='dark'
POWERLEVEL9K_HOST_TEMPLATE="%2m"
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="$ "
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_VI_COMMAND_MODE_STRING="n"
POWERLEVEL9K_VI_INSERT_MODE_STRING="i"

POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='yellow'
POWERLEVEL9K_DIR_SHOW_WRITABLE=true
POWERLEVEL9K_CONTEXT_FOREGROUND='white'
POWERLEVEL9K_VCS_CLEAN_FOREGROUND='blue'
POWERLEVEL9K_VCS_CLEAN_BACKGROUND='black'
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='yellow'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='black'
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='red'
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='black'
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
POWERLEVEL9K_SHORTEN_DELIMITER=""
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status vi_mode background_jobs_joined)

ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='standout'

setopt inc_append_history
setopt correct
setopt extended_history

unsetopt nomatch
unsetopt share_history
unsetopt correct
unsetopt correct_all

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jlane/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/jlane/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jlane/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/jlane/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

bindkey -v # vi-mode

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^s' history-incremental-search-forward

export KEYTIMEOUT=1

[[ -r "$HOME/.keys.env" ]] && source $HOME/.keys.env
[[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh

if [ -f ~/.fzf.zsh ]; then
	source ~/.fzf.zsh

	zz() {
		cd "$(_z -l 2>&1 | sed 's/^[0-9,.]* *//' | fzf -q "$_last_z_args")"
	}

	# fkill - kill process
	fkill() {
		local pid
		pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

		if [ "x$pid" != "x" ]
		then
			echo $pid | xargs kill -${1:-9}
		fi
	}

	# CTRL-R - Paste the selected command from history into the command line
	fzf-history-widget() {
	local selected num
	setopt localoptions noglobsubst noposixbuiltins pipefail 2> /dev/null
	selected=( $(fc -rl 1 |
		FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
	local ret=$?
	if [ -n "$selected" ]; then
		num=$selected[1]
		if [ -n "$num" ]; then
			zle vi-fetch-history -n $num
		fi
	fi
	zle redisplay
	typeset -f zle-line-init >/dev/null && zle zle-line-init
	return $ret
}
zle     -N   fzf-history-widget
bindkey '^R' fzf-history-widget

# fco_preview - checkout git branch/tag, with a preview showing the commits between the tag/branch and HEAD
fgco() {
	local tags branches target
	tags=$(
	git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
	branches=$(
	git branch --all | grep -v HEAD |
		sed "s/.* //" | sed "s#remotes/[^/]*/##" |
		sort -u | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
	target=$(
	(echo "$tags"; echo "$branches") |
		fzf --no-hscroll --no-multi --delimiter="\t" -n 2 \
		--ansi --preview="git log -200 --pretty=format:%s $(echo {+2..} |  sed 's/$/../' )" ) || return
	git checkout $(echo "$target" | awk '{print $2}')
}

export FZF_COMPLETION_TRIGGER=''
bindkey '^T' fzf-completion
bindkey '^I' $fzf_default_completion
# Wow the world is not ready for this
# bindkey '^I' fzf-completion
fi
source ~/.rc
