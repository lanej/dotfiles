# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
export TERM='xterm-256color'

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
DEFAULT_USER='jlane'
# ZSH_THEME="lanej"
# ZSH_THEME="agnoster"
# ZSH_THEME="powerlevel9k"
ZSH_THEME="powerlevel9k/powerlevel9k"

POWERLEVEL9K_COLOR_SCHEME='dark'
POWERLEVEL9K_HOST_TEMPLATE="%2m"
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="$ "
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_VI_COMMAND_MODE_STRING="n"
POWERLEVEL9K_VI_INSERT_MODE_STRING="i"

POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='yellow'
POWERLEVEL9K_DIR_SHOW_WRITABLE=true
POWERLEVEL9K_CONTEXT_FOREGROUND='white'
POWERLEVEL9K_VCS_CLEAN_FOREGROUND='blue'
POWERLEVEL9K_VCS_CLEAN_BACKGROUND='black'
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='yellow'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='black'
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='red'
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='black'

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status vi_mode background_jobs_joined)

# Example aliases
alias zshconfig="vim ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

HIST_FIND_NO_DUPS="true"
HIST_IGNORE_ALL_DUPS="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git osx zsh-autosuggestions vi-mode)

source $ZSH/oh-my-zsh.sh

setopt inc_append_history
setopt correct
setopt extended_history
unsetopt nomatch
unsetopt share_history

unsetopt correct
unsetopt correct_all

source ~/.profile

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jlane/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/jlane/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jlane/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/jlane/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

bindkey -v # vi-mode

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^s' history-incremental-search-forward

export KEYTIMEOUT=1

if [ -f ~/.fzf.zsh ]; then
	source ~/.fzf.zsh

	zz() {
	  cd "$(_z -l 2>&1 | sed 's/^[0-9,.]* *//' | fzf -q "$_last_z_args")"
	}

	export FZF_COMPLETION_TRIGGER=''
	bindkey '^T' fzf-completion
	bindkey '^I' $fzf_default_completion

	# fkill - kill process
	fkill() {
	  local pid
	  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

	  if [ "x$pid" != "x" ]
	  then
	    echo $pid | xargs kill -${1:-9}
	  fi
	}

	# CTRL-R - Paste the selected command from history into the command line
	fzf-history-widget() {
	  local selected num
	  setopt localoptions noglobsubst noposixbuiltins pipefail 2> /dev/null
	  selected=( $(fc -rl 1 |
	    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
	  local ret=$?
	  if [ -n "$selected" ]; then
	    num=$selected[1]
	    if [ -n "$num" ]; then
	      zle vi-fetch-history -n $num
	    fi
	  fi
	  zle redisplay
	  typeset -f zle-line-init >/dev/null && zle zle-line-init
	  return $ret
	}
	zle     -N   fzf-history-widget
	bindkey '^R' fzf-history-widget
fi
